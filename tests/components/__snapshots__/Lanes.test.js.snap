// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lanes Component should render the form correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_default
    lanes={
      Array [
        [MockFunction],
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <DropTarget(Lane)
          className="lane"
          lane={[MockFunction]}
        >
          <LaneHeader
            name="mockConstructor"
          />
          <LaneNotes
            notes={undefined}
          />
        </DropTarget(Lane)>,
      ],
      "className": "lanes",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <LaneHeader
              name="mockConstructor"
            />,
            <LaneNotes
              notes={undefined}
            />,
          ],
          "className": "lane",
          "lane": [MockFunction],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "mockConstructor",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "notes": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <DropTarget(Lane)
            className="lane"
            lane={[MockFunction]}
          >
            <LaneHeader
              name="mockConstructor"
            />
            <LaneNotes
              notes={undefined}
            />
          </DropTarget(Lane)>,
        ],
        "className": "lanes",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <LaneHeader
                name="mockConstructor"
              />,
              <LaneNotes
                notes={undefined}
              />,
            ],
            "className": "lane",
            "lane": [MockFunction],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "mockConstructor",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "notes": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
